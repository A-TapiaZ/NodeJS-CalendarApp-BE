{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","helpers/stringToDate.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","login","user","type","payload","checkingFinish","logout","stringToDate","events","map","e","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","name","useSelector","state","auth","dispatch","useDispatch","className","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","resp","json","ok","msg","console","log","getState","uid","evento","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","useForm","initialState","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","email","password","Date","getTime","PublicRoute","isAuthenticated","Component","component","rest","props","to","prototypes","PropTypes","bool","isRequired","func","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3439351.chunk.js","sourcesContent":["\r\nconst baseURL= process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data , method= 'GET') => {\r\n  \r\n  const url=`${baseURL}/${endpoint}`; //localhost:4000/api \r\n\r\n  if (method==='GET') {\r\n    return fetch(url); \r\n  }else{\r\n    return fetch(url, {\r\n      method,\r\n      headers:{\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint, data , method= 'GET') => {\r\n  \r\n  const url=`${baseURL}/${endpoint}`; //localhost:4000/api \r\n\r\n  // obtenemos el token del LS\r\n  const token = localStorage.getItem('token') || ''\r\n\r\n    if (method==='GET') {\r\n      return fetch(url,{\r\n        method,\r\n        headers:{\r\n          'x-token':token,\r\n        }\r\n      });\r\n    }else{\r\n      return fetch(url, {\r\n        method,\r\n        headers:{\r\n          'Content-type': 'application/json',\r\n          'x-token':token,\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n  fetchSinToken,\r\n  fetchConToken\r\n}","export const types ={\r\n\r\n  uiOpenModal: '[ui] open modal', \r\n  uiCloseModal: '[ui] close modal',\r\n  \r\n  eventSetActive: '[event] set active',\r\n  eventStartAddNew: '[event] start add new' ,\r\n  eventAddNew: '[event] add new',\r\n  eventClearActiveEvent: '[event] clear active event',\r\n  eventUpdated: '[event] event updated',\r\n  eventDeleted: '[event] event deleted',\r\n  eventLoaded: '[event] event loaded',\r\n  enventLogout: '[event] event logout (clear redux)',\r\n\r\n  authCheckingFinish:'[auth] finish checking login state',\r\n  authStartLogin: '[auth] start login',\r\n  authLogin: '[auth] login',\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n}","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/**INGRESO CON CORREO Y CONTRASEÑA, GUARDO TOKEN EN LS */\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n   \r\n    const resp= await fetchSinToken('auth', {email, password}, 'POST');\r\n    const body= await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      \r\n      dispatch(login({\r\n        uid:body.uid,\r\n        name:body.name,\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg,'error');\r\n    }\r\n  }  \r\n}\r\n\r\n/* REGISTRO USUARIO NUEVO  */\r\nexport const startRegister = (name ,email, password) => {\r\n  return async (dispatch) => {\r\n   \r\n    const resp= await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n    const body= await resp.json();\r\n\r\n    console.log(body);\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      \r\n      dispatch(login({\r\n        uid:body.uid,\r\n        name:body.name,\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg,'error');\r\n    }\r\n  }  \r\n}\r\n\r\n// DISPARO LA ACCION PARA ACTUALIZAR EL ESTADO CON LA INFORMACION DEL USER\r\nconst login = (user) => ({\r\n  type:types.authLogin,\r\n  payload: user\r\n})\r\n\r\n\r\n/* Chequear de que el usuario tenga un token valido */\r\nexport const startChecking = ( ) => {\r\n  return async (dispatch) => {\r\n    const resp= await fetchConToken('auth/renew');\r\n    const body= await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      \r\n      dispatch(login({\r\n        uid:body.uid,\r\n        name:body.name,\r\n      }))\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  }\r\n}\r\n\r\n// Cambia el valor del checking a false, ya que no se ha verificado el token \r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\n\r\n//Limpiamos todo antes de salir del navegador\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    \r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  }\r\n  \r\n}\r\n\r\nconst logout = () => ({type:types.authLogout})\r\n\r\n","import moment from 'moment';\r\n\r\nexport const  stringToDate = (events= []) => {\r\n  \r\n  return events.map( (e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  })\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\nimport {fetchConToken} from \"../helpers/fetch\";\r\nimport { stringToDate } from \"../helpers/stringToDate\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* ACTUALIZA EL ESTADO CON EL EVENTO SELECCIONADO (al dar click sobre) */\r\nexport const eventSetActive = (event) => ({\r\n  type:types.eventSetActive,\r\n  payload:event,\r\n})\r\n\r\n/* INICIA EL GUARDADO DEL EVENTO EN LA BD */\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    \r\n    const {uid,name} = getState().auth;\r\n    try {\r\n      \r\n      const resp = await fetchConToken('events', event, 'POST');\r\n      const body = await resp.json();\r\n\r\n      console.log(body);\r\n\r\n      if (body.ok){\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id:uid,\r\n          name,\r\n        }\r\n\r\n        console.log(event);\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  }\r\n  \r\n}\r\n/* AGREGA EL EVENTO EN EL CALENDARIO */ \r\nconst eventAddNew = (event) => ({\r\n  type:types.eventAddNew,\r\n  payload: event,\r\n})\r\n\r\n/* Cuando borro o le doy al espacio vacio cuando el modal esta abierto, es cuando se dispara esta accion para limpiar el estado de 'activeEvent'*/ \r\nexport const eventClearActiveEvent= () => ({\r\n  type:types.eventClearActiveEvent\r\n})\r\n\r\n// Limpiamos redux cuando damos al boton logout.\r\nexport const enventLogout= () => ({\r\n  type:types.enventLogout\r\n})\r\n\r\n\r\n/* VA A ACTUALIZAR LOS EVENTOS EN LA BD*/ \r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    \r\n    try {\r\n\r\n      const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        // NO tomo el event de la respuesta del fetch, sino del argumentoq ue recibe la funcion, ya que es el mismo que se envio a la BD\r\n        dispatch(eventUpdated(event));\r\n      } else{\r\n        Swal.fire('Error',body.msg,'error');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/* VA A ACTUALIZAR LOS EVENTOS EN EL CALENDARIO*/ \r\nconst eventUpdated= (event) => ({\r\n  type:types.eventUpdated,\r\n  payload:event,\r\n})\r\n\r\n\r\n/* VA A ELIMINAR UN EVENTO EN LA BD*/ \r\nexport const eventStartDelete = () => {\r\n  return async (dispatch,getState) => {\r\n\r\n    const {id} = getState().calendar.activeEvent;\r\n    \r\n    console.log(id);\r\n\r\n    try {\r\n\r\n      const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n      const body = await resp.json();\r\n\r\n      console.log(body);\r\n\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else{\r\n        Swal.fire('Error',body.msg,'error');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/* ELIMINA EL EVENTO DEL CALENDARIO */\r\nconst eventDeleted= () => ({\r\n  type:types.eventDeleted,\r\n});\r\n\r\n\r\n/* VA A TRAER LOS EVENTOS DE LA BD*/ \r\nexport const eventStartLoading = (event) => {\r\n  return async (dispatch) => {\r\n    \r\n    try {\r\n      \r\n      const resp = await fetchConToken('events');\r\n      const body = await resp.json();\r\n\r\n      // Creamos un helper para convertir la fecha a tipo date, ya que cuando lo guardamos en la BD, se guarda en tipo String.\r\n      const eventos = stringToDate(body.eventos);\r\n\r\n      dispatch(eventLoaded(eventos));\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/** VA A CARGAR LOS EVENTOS EN EL CALENDARIO */\r\nconst eventLoaded = (events) => {\r\n  return ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n  })\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { enventLogout } from '../../actions/events';\r\n\r\nconst NavBar = () => {\r\n\r\n  const {name}= useSelector(state => state.auth)\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n    dispatch(enventLogout());\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className= \" navbar navbar-dark bg-dark mb-4\">\r\n      <span className= \"navbar-brand\">\r\n        {name}\r\n      </span>\r\n\r\n      <button \r\n        className=\"btn btn-outline-danger\"\r\n        onClick={handleLogout}>\r\n        \r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from 'react'\r\n\r\nconst CalendarEvent = ({event}) => {\r\n\r\n  const  {title, user:{name}}= event;\r\n\r\n  return (\r\n    <div>\r\n      <span>{title}</span>\r\n      <strong>- {name}</strong>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n  type:types.uiOpenModal\r\n})\r\n \r\nexport const uiCloseModal = () => ({\r\n  type:types.uiCloseModal\r\n})\r\n ","import React, { useState, useEffect } from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent,eventStartAddNew,eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n// Se puede poner en un helper, pero no lo haremos . \r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\n// yourAppElement: es el elemento que se encuentra en el index.html de la carpeta public\r\n// Modal.setAppElement('#yourAppElement')\r\nModal.setAppElement('#root')\r\n\r\nconst now= moment().minutes(0).seconds(0).add(1,'h');\r\n\r\nconst initEvent={\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end:now.add(1,'h').toDate(),\r\n}\r\n\r\n/**EMPIEZA EL CODIGO DEL COMPONENTE */\r\nconst CalendarModal = () => {\r\n\r\n  // Obtengo el estado del REDUX storage\r\n  const {modalOpen} = useSelector(state => state.ui)\r\n  const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Definimos useState, porque este estado solo se implementara en esta pagina. \r\n  const [dateStart, setDateStart] = useState(now.toDate())\r\n  const [dateEnd, setDateEnd] = useState(now.add(1,'h').toDate())\r\n\r\n  // Un estado para saber si ingresaron un titulo\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent)\r\n  \r\n  const {title,notes,start,end}=formValues;  \r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent)\r\n    } else {\r\n      setFormValues(initEvent)\r\n    }\r\n  }, [activeEvent,setFormValues])\r\n\r\n\r\n  const handleInputChange= ({target}) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]:target.value,\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  } \r\n  \r\n  const handleStartDateChange= (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start:e,\r\n    })\r\n  }\r\n\r\n  const handleEndDateChange= (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end:e,\r\n    })\r\n  };\r\n\r\n  const handleSubmitForm= (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire('Error','Fecha 2 debe ser mayor','error');\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    // Si existe un evento activo (estado en redux), es porque lo estamos actulizando, si no, seria un evento nuevo.\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    }else{\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true)\r\n    closeModal();\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    > \r\n      <h1> {activeEvent? 'Editar evento' : 'Nuevo evento' } </h1>\r\n      <hr />\r\n      <form \r\n        className=\"container\"\r\n        onSubmit={handleSubmitForm}\r\n        >\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n          className=\"form-control\"\r\n          onChange={handleStartDateChange}\r\n          value={dateStart}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n          className=\"form-control\"\r\n          onChange={handleEndDateChange}\r\n          value={dateEnd}\r\n          minDate={dateStart}\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input \r\n            type=\"text\" \r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />  \r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CalendarModal\r\n","// Fab: floating action button\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick =() => {\r\n    dispatch(uiOpenModal());\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={handleClick}\r\n      >\r\n      <i \r\n      className=\"fas fa-plus\"\r\n      ></i>      \r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddNewFab\r\n","// Fab: floating action button\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick =() => {\r\n    dispatch(eventStartDelete());\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={handleClick}\r\n      >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar evento</span>            \r\n    </button>\r\n  )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../ui/NavBar';\r\n// Este modo de importacion esta obsoleto. \r\n// import BigCalendar from 'react-big-calendar';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\n// Para pasar moments a español\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n// const myEventsList = [{\r\n  //   title: 'titulo evento 2',\r\n  //   start: moment().toDate(),//Sinonimo a hacer un new Date pero en moment.\r\n  //   end:  moment().add(2,'h').toDate(),\r\n  //   notes: 'Comprar el evento 2',\r\n  //   user:{\r\n    //     _id:'9876454',\r\n    //     name:'Pachitu'\r\n    //   }\r\n    // }]\r\n    \r\n\r\n/**DEFINICION DEL COMPONENTE */\r\nconst CalendarScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const {events,activeEvent} = useSelector(state => state.calendar)\r\n  const {uid} = useSelector(state => state.auth)\r\n\r\n  // Revisa a ver si en el localstorage hay informacion del lastview, si no la encuentra la establece en month por defecto\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading())\r\n\r\n  }, [dispatch])\r\n\r\n\r\n  const onDoubleClick= (e) => {\r\n    dispatch(uiOpenModal());\r\n  }\r\n\r\n  const onSelectEvent= (e) => {\r\n    dispatch(eventSetActive(e))\r\n  }\r\n\r\n  const onViewChange= (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e)\r\n  }\r\n  \r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    \r\n    const style={\r\n      backgroundColor:(uid === event.user._id ? '#367CF7' : '#465660'),\r\n      borderRadius: '0px',\r\n      opacity:0.7,\r\n      display:'block',\r\n      color:'white',\r\n    }\r\n\r\n    return {\r\n      style\r\n    }\r\n  }\r\n  \r\n  // Si hacemos click afuera del evento, el boton de borrar evento tiene que desaparacer.\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  }\r\n  \r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <NavBar />\r\n\r\n\r\n      <Calendar \r\n      localizer={localizer}\r\n      events={events}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      messages={messages}\r\n      eventPropGetter={eventStyleGetter}\r\n      onDoubleClickEvent={onDoubleClick}\r\n      onSelectEvent={onSelectEvent}\r\n      onView={onViewChange}\r\n      onSelectSlot={onSelectSlot}\r\n      selectable={true}\r\n      view={lastView}\r\n      components={{\r\n        event:CalendarEvent \r\n      }}\r\n      />\r\n\r\n      <AddNewFab/>\r\n\r\n      {\r\n        activeEvent &&\r\n        <DeleteEventFab/>\r\n      }\r\n\r\n\r\n\r\n      <CalendarModal/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n  const [values, setValues] = useState(initialState)  \r\n\r\n  const reset = () => {\r\n    setValues(initialState)\r\n  }\r\n  \r\n\r\n  const handleInputChange= ({target}) => {\r\n    // console.log(target);\r\n    setValues({\r\n      ...values,\r\n      [target.name]:target.value\r\n    })\r\n  }\r\n\r\n  return [values, handleInputChange, reset]\r\n  \r\n}\r\n","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [formLoginValues, handleLoginInputChange]= useForm({\r\n    lEmail:'fernando@gmail.com',\r\n    lPassword:'123456',\r\n  });\r\n  \r\n  const [formRegisterValues, handleRegisterInputChange]= useForm({\r\n    rName:'Nando',\r\n    rEmail:'nando@gmail.com',\r\n    rPassword1:'123456',\r\n    rPassword2:'123456',\r\n  });\r\n  \r\n  const {lEmail, lPassword} = formLoginValues;\r\n  const {rName,rEmail,rPassword1,rPassword2} = formRegisterValues;\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startLogin(lEmail,lPassword));\r\n  }\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1!==rPassword2) {\r\n      return Swal.fire('Error', 'Contraseñas no coinciden', 'error');\r\n    }\r\n    dispatch(startRegister(rName,rEmail,rPassword1));\r\n  }\r\n  \r\n\r\n\r\n\r\n    return (\r\n      <div className=\"container login-container\">\r\n        <div className=\"row\">\r\n          \r\n          <div className=\"col-md-6 login-form-1\">\r\n            <h3>Ingreso</h3>\r\n            <form onSubmit={handleLogin}>\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Correo\"\r\n                  name=\"lEmail\"\r\n                  value={lEmail}\r\n                  onChange={handleLoginInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Contraseña\"\r\n                  name=\"lPassword\"\r\n                  value={lPassword}\r\n                  onChange={handleLoginInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"submit\"\r\n                  className=\"btnSubmit\"\r\n                  value=\"Login\" \r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 login-form-2\">\r\n            <h3>Registro</h3>\r\n            <form onSubmit={handleRegister}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre\"\r\n                  name=\"rName\"\r\n                  value={rName}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Correo\"\r\n                  name=\"rEmail\"\r\n                  value={rEmail}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Contraseña\"\r\n                  name=\"rPassword1\"\r\n                  value={rPassword1}\r\n                  onChange={handleRegisterInputChange} \r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Repita la contraseña\"\r\n                  name=\"rPassword2\"\r\n                  value={rPassword2}\r\n                  onChange={handleRegisterInputChange} \r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"submit\" \r\n                  className=\"btnSubmit\" \r\n                  value=\"Crear cuenta\" />\r\n              </div>  \r\n            </form>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={ (props) => (\r\n        // Si esta autenticado\r\n        isAuthenticated\r\n        // lo dejo pasar y lo llevo a raiz que es la ruta privada\r\n        ?  <Redirect to=\"/\"/>\r\n        // de lo contrario lo mando al componente que le estoy enviando desde los props, en este caso , que contiene las paginas de registro y login.\r\n        : <Component{...props}/>\r\n        \r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.prototypes={\r\n  isAuthenticated:PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default PublicRoute\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={ (props) => (\r\n        // Si esta autenticado\r\n        isAuthenticated\r\n        // lo dejo pasar y cargo el componente que pase desde las props, en este caso, el JournalScreen o la pantalla ppal de mi aplicacion.\r\n        ? <Component{...props}/> \r\n        // de lo contrario lo redirecciono al login\r\n        : <Redirect to=\"/login\"/>\r\n\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.prototypes={\r\n  isAuthenticated:PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default PrivateRoute\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {checking, uid} = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n    \r\n  }, [dispatch]);\r\n\r\n  // Este checking es para saber si el usuario esta logueado o no.\r\n  if (checking) {\r\n    return <h5>Espere ...</h5>;\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n          exact \r\n          path=\"/login\" \r\n          component={LoginScreen}\r\n          isAuthenticated={!!uid} // la doble negacion convierte cualquier objeto en un true o false\r\n          />\r\n\r\n          <PrivateRoute \r\n          exact \r\n          path=\"/\" \r\n          component={CalendarScreen}\r\n          isAuthenticated={!!uid}\r\n          />\r\n\r\n          <Redirect to=\"/login\"/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n  modalOpen:false,\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      \r\n      return{\r\n        ...state,\r\n        modalOpen:true,\r\n      }\r\n  \r\n    case types.uiCloseModal:\r\n      \r\n      return{\r\n        ...state,\r\n        modalOpen:false,\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\n/* EJEMPLO DE UN EVENTO\r\n  {\r\n    id:new Date().getTime(),\r\n    title: 'titulo evento',\r\n    start: moment().toDate(),//Sinonimo a hacer un new Date pero en moment.\r\n    end:  moment().add(2,'h').toDate(),\r\n    notes: 'Comprar el evento',\r\n    user:{\r\n      _id:'123',\r\n      name:'Pacho'\r\n    }\r\n  }\r\n*/\r\n\r\nconst initialState ={\r\n\r\n  events:[],\r\n  activeEvent: null,\r\n  \r\n}\r\n\r\n\r\nexport const calendarReducer= (state=initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      \r\n      return {\r\n        ...state,\r\n        activeEvent:action.payload\r\n      }\r\n\r\n    case types.eventAddNew:\r\n      \r\n      return {\r\n        ...state,\r\n        events: [\r\n          ...state.events,\r\n          action.payload\r\n        ]\r\n      }\r\n      \r\n      case types.eventClearActiveEvent:\r\n        \r\n        return {\r\n          ...state,\r\n          activeEvent:null\r\n        }\r\n        \r\n      case types.eventUpdated:\r\n        \r\n        return {\r\n          ...state,\r\n          events: state.events.map(\r\n            e => e.id===action.payload.id ? action.payload : e\r\n          )\r\n        }\r\n\r\n      case types.eventDeleted:\r\n        \r\n        return {\r\n          ...state,\r\n          events: state.events.filter (\r\n            e => e.id!==state.activeEvent.id \r\n          ),\r\n          activeEvent:null\r\n        }\r\n\r\n      case types.eventLoaded:\r\n        \r\n        return {\r\n          ...state,\r\n          events: [...action.payload]\r\n        }\r\n      \r\n      case types.enventLogout:\r\n        \r\n        return {\r\n          ...initialState\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n \r\nconst initialState = {\r\n  checking: true,\r\n  // uid:null,\r\n  // name:null\r\n}\r\n\r\nexport const authReducer = (state=initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    \r\n    case types.authLogin:\r\n      return {\r\n      ...state,\r\n      ...action.payload,\r\n      checking:false\r\n    };\r\n  \r\n    case types.authCheckingFinish:\r\n      return {\r\n      ...state,\r\n      checking:false\r\n    };\r\n\r\n    case types.authLogout:\r\n      return {\r\n      checking:false\r\n    };\r\n\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer= combineReducers({\r\n  ui: uiReducer,\r\n  calendar:calendarReducer,\r\n  auth: authReducer,\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);","import React from 'react'\r\nimport AppRouter from './router/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\n\r\n\r\nconst CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter/>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\n\nimport './styles.css'\nReactDOM.render(\n\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}